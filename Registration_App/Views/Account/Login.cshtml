@model Registration_App.Models.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>

<h4>LoginViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="UserNameOrEmail" class="control-label"></label>
                <input asp-for="UserNameOrEmail" class="form-control" id="email" />
                <span asp-validation-for="UserNameOrEmail" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" id="pwd" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    Don't possess an account??
    <hr />
    Here:
    <a asp-action="Registration">Go to Registration</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.21.0/jquery.validate.min.js"></script>

<script>
    
    
    $(document).ready(function () {
        $('form').validate({
            rules: {
                UserNameOrEmail: {
                    required: true
                },
                Password: {
                    required: true
                }
            }
        });
        $('.btn').on('click', function () {
            console.log($('form').valid());
        });
    });
    
</script>