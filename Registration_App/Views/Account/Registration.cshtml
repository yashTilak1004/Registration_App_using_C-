@model Registration_App.Models.RegistrationViewModel
@{
    ViewData["Title"] = "Registration";
    string[] GenderOptions = { "Male", "Female", "Other" };
    string[] SkillOptions = { "C#", "Java", "Python", "JavaScript", "HTML/CSS" };
    string[] RoleOptions = { "User", "Admin", "Moderator" };
}
<h1>Registration</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Registration">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (ViewBag.Message != null)
            {
                <div class="form-group" style="color:green;"> @ViewBag.Message</div>
            }
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" id="email" name="email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" id="password" type="password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmPassword" class="control-label"></label>
                <input asp-for="ConfirmPassword" class="form-control" type="password" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control" type="date" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                <div>
                    @for (int i = 0; i < GenderOptions.Length; i++)
                    {
                        <div class="form-check">
                            <input type="radio" name="Gender" value="@GenderOptions[i]" class="form-check-input" />
                            <label class="form-check-label">@GenderOptions[i]</label>
                        </div>
                    }
                </div>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Skills" class="control-label"></label>
                <div>
                    @for (int i = 0; i < SkillOptions.Length; i++)
                    {
                        <div class="form-check">
                            <input type="checkbox" name="Skills" value="@SkillOptions[i]" class="form-check-input" />
                            <label class="form-check-label">@SkillOptions[i]</label>
                        </div>
                    }
                </div>
                <span asp-validation-for="Skills" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Role" class="control-label"></label>
                <div>
                    @for (int i = 0; i < RoleOptions.Length; i++)
                    {
                        <div class="form-check">
                            <input type="radio" name="Role" value="@RoleOptions[i]" class="form-check-input" />
                            <label class="form-check-label">@RoleOptions[i]</label>
                        </div>
                    }
                </div>
                <span asp-validation-for="Role" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Register" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    Already Have an Account <a asp-action="Login">Go to Login</a>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.21.0/jquery.validate.min.js"></script>
@* <script>
     $(document).ready(function () {
         $('form').validate({
             rules: {
                 Password:{
                     required:true,
                 },
                 ConfirmPassword:{
                     required:true,
                     equalTo:'#password'
                 }
             },
             messages: {
                 Password: {
                     required:"please enter the password"
                 },
                ConfirmPassword:{
                    equalTo:"Please check password and confirm password should match",
                    required:"Please Reenter the password",
                }
             }
         });
         $("#btn1").on('click', function () {
             console.log($('form').valid());
         });
     });
 </script> *@
 <script>
    $(document).ready(function () {
         $.validator.addMethod("EmailDomain", function (value, element, args) {
             let regex = /^([a-zA-Z0-9._%-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})$/;
             return regex.test(value);
         }, 'Write the right email')

    $.validator.addMethod("passwordStrength", function(value, element, args) {
        // Regular expression to check for at least one digit, one special character, one lowercase letter, one uppercase letter, and a minimum length of 8 characters
        let re = /^(?=.*\d)(?=.*[!@@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;
        return re.test(value);
    }, "Please write a stronger password")

    $.validator.addMethod("No_White_Space", function (value, element) {
            return this.optional(element) || /^[^\s]+$/.test(value);
     }, "Please don't include any white spaces.")

     $.validator.addMethod("alphanumeric", function (a, b) 
     { return this.optional(b) || /^\w+$/i.test(a) }, 
     "Letters, numbers, and underscores only please.")






     $('form').validate({
         rules: {
             FirstName: {
                 required:true,
                 minlength:5,
                 maxlength:20,
                 No_White_Space:true,
                 alphanumeric:true
             },
             LastName: {
                    required: true,
                    minlength: 5,
                    maxlength: 20,
                    No_White_Space: true,
                    alphanumeric: true
             },
             UserName: {
                 required:true,
                    minlength: 5,
                    maxlength: 20,
                    No_White_Space: true,
             },
             DateOfBirth: {
                 required:true,
             },
             Gender:{
                 required:true
             },
             Role:{
                 required:true
             },
             Password: {
                 required: true,
                 passwordStrength:true
             },
             ConfirmPassword: {
                 required: true,
                 equalTo: '#password'
             },
             email:{
                 required:true,
                 EmailDomain:true,
             },
         },
         messages: {
             Password: {
                 required: "please enter the password",
             },
             ConfirmPassword: {
                 equalTo: "Please check password and confirm password should match",
                 required: "Please Reenter the password",
             },
             UserName: {
                 required:"Please enter the User Name",
             },
             FirstName: {
                 required:"Please enter the first Name",
                 minlength: "The Minimum Length is 5",
                 maxlength: "The Maximum Length is 20",
             },
             LastName:{
                 required:"Please enter the last Name",
             },
             DateOfBirth: {
                 required:"Please Enter the Date Of Birth",
             },
             Gender: {
                 required:"Please Enter Your Gender",
             },
             Role: {
                 required:"Please enter your Role",
             }
         }
     });
     $("#btn1").on('click', function () {
         console.log($('form').valid());
     });
 });

 </script>























